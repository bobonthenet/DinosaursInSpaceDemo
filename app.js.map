{"version":3,"sources":["app/initialize.js","app/scenes/DiSScene.js","app/scenes/boot.js","app/scenes/default.js","app/scenes/menu.js","app/sprites/BadRex.js","app/sprites/Bullet.js","app/sprites/Enemy.js","app/sprites/Player.js","app/sprites/Tanky.js","app/sprites/Troodon.js"],"names":["_boot","require","_default","_menu","_DiSScene","window","game","Phaser","Game","width","height","type","AUTO","title","url","version","banner","background","loader","path","maxParallelDownloads","physics","default","matter","enableSleep","scene","_boot2","_default2","_menu2","_DiSScene2","_Player","_Troodon","_BadRex","_Tanky","DiSScene","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","load","image","tilemapTiledJSON","spritesheet","frameWidth","frameHeight","_this2","map","make","tilemap","key","tileset","addTilesetImage","collisionLayer","createDynamicLayer","setCollisionByProperty","collides","world","convertTilemapLayer","setBounds","widthInPixels","heightInPixels","enemyGroup","add","group","getObjectLayer","objects","forEach","enemy","enemyObject","name","_Troodon2","x","y","_BadRex2","_Tanky2","console","error","tileProperties","gid","player","_Player2","anims","create","frames","generateFrameNumbers","start","end","frameRate","repeat","play","cameras","main","particles","emitter","createEmitter","setSpeed","setBlendMode","BlendModes","ADD","on","event","bodyA","bodyB","gameObject","collision","keys","up","input","keyboard","addKey","Input","Keyboard","KeyCodes","UP","left","LEFT","right","RIGHT","down","DOWN","space","SPACE","update","children","entries","sprite","scrollX","setPosition","time","delayedCall","Scene","Boot","_this","progressBar","progressBarRectangle","onLoadProgress","onLoadComplete","createProgressBar","Geom","Rectangle","CenterOn","graphics","log","destroy","progress","rect","color","failed","size","clear","fillStyle","fillRect","Default","score","data","sky","alpha","speed","scale","blendMode","logo","setVelocity","setBounce","setCollideWorldBounds","startFollow","once","quit","FONT","Menu","highScore","text","fill","fontFamily","fontSize","setOrigin","setShadow","_Enemy2","_Bullet","BadRex","config","lastFired","setIgnoreGravity","bullets","bullet","i","_Bullet2","activated","now","get","fire","alive","setVelocityY","setVelocityX","Bullet","existing","setActive","setVisible","velocityX","velocityY","offsetX","offsetY","active","death","remove","GameObjects","Sprite","Enemy","beenSeen","direction","setFixedRotation","setScale","setFrictionAir","setMass","sys","canvas","kill","whoHitMe","explosion","Player","angle","setAngle","isDown","thrustBack","thrust","thrustLeft","thrustRight","whoKilledMe","Tanky","tile","Troodon"],"mappings":"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","file":"public/app.js.map","sourcesContent":["import BootScene from 'scenes/boot';\nimport DefaultScene from 'scenes/default';\nimport MenuScene from 'scenes/menu';\nimport DiSScene from 'scenes/DiSScene';\n\nwindow.game = new Phaser.Game({\n\n  // See <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n\n  width: 800,\n  height: 600,\n  // zoom: 1,\n  // resolution: 1,\n  type: Phaser.AUTO,\n  // parent: null,\n  // canvas: null,\n  // canvasStyle: null,\n  // seed: null,\n  title: '☕️ Brunch with Phaser', // 'My Phaser 3 Game'\n  url: 'https://github.com/samme/brunch-phaser-es6',\n  version: '0.0.1',\n  // input: {\n  //   keyboard: true,\n  //   mouse: true,\n  //   touch: true,\n  //   gamepad: false\n  // },\n  // disableContextMenu: false,\n  // banner: false\n  banner: {\n    // hidePhaser: false,\n    // text: 'white',\n    background: ['#e54661', '#ffa644', '#998a2f', '#2c594f', '#002d40']\n  },\n  // fps: {\n  //   min: 10,\n  //   target: 60,\n  //   forceSetTimeout: false,\n  // },\n  // pixelArt: false,\n  // transparent: false,\n  // clearBeforeRender: true,\n  // backgroundColor: 0x000000, // black\n  loader: {\n    // baseURL: '',\n    path: 'assets/',\n    maxParallelDownloads: 6,\n    // crossOrigin: 'anonymous',\n    // timeout: 0\n  },\n  physics: {\n    default: 'matter',\n    matter: {\n      enableSleep: true\n    }\n  },\n  scene: [\n    BootScene,\n    DefaultScene,\n    MenuScene,\n    DiSScene\n  ],\n\n});\n","import Player from '../sprites/Player';\nimport Troodon from '../sprites/Troodon';\nimport BadRex from '../sprites/BadRex';\nimport Tanky from '../sprites/Tanky';\n\nexport default class DiSScene extends Phaser.Scene {\n  constructor() {\n    super('DiSScene');\n  }\n\n  preload() {\n    this.load.image('tiles', 'tiles_spritesheet.png');\n    this.load.tilemapTiledJSON('map', 'level.json');\n    this.load.image('spark', 'blue.png');\n    this.load.spritesheet('rex', 'rex.png', {frameWidth: 528, frameHeight: 294});\n    this.load.image('troodon', 'troodon.png');\n    this.load.image('tanky', 'tanky.png');\n    this.load.image('badrex', 'badrex.png');\n    this.load.image('bullet', 'bullet.png');\n  }\n\n  create() {\n    this.map = this.make.tilemap({ key: 'map'});\n    this.tileset = this.map.addTilesetImage('tiles_spritesheet', 'tiles');\n    this.collisionLayer = this.map.createDynamicLayer(0, this.tileset, 0, 0);\n\n    this.collisionLayer.setCollisionByProperty({ collides: true });\n\n    this.matter.world.convertTilemapLayer(this.collisionLayer);\n    this.matter.world.setBounds(this.map.widthInPixels, this.map.heightInPixels);\n\n    this.enemyGroup = this.add.group();\n\n    this.map.getObjectLayer('enemies').objects.forEach(\n      (enemy) => {\n        let enemyObject;\n        switch (enemy.name) {\n        case 'troodon':\n          enemyObject = new Troodon({\n            scene: this,\n            key: 'troodon',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        case 'badrex':\n          enemyObject = new BadRex({\n            scene: this,\n            key: 'badrex',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        case 'tanky':\n          enemyObject = new Tanky({\n            scene: this,\n            key: 'tanky',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        default:\n          console.error('Unknown:', this.tileset.tileProperties[enemy.gid - 1]);\n          break;\n        }\n        this.enemyGroup.add(enemyObject);\n      }\n    );\n\n    this.player = new Player({\n      scene: this,\n      key: 'rex',\n      x: 300,\n      y: 300\n    });\n\n    this.anims.create({\n      key: 'rexFly',\n      frames: this.anims.generateFrameNumbers('rex', {start: 0, end: 2}),\n      frameRate: 5,\n      repeat: -1\n    });\n\n    this.player.anims.play('rexFly', true);\n\n    this.cameras.main.setBounds();\n    \n    //TODO: I think I'm going to need a group of emitters for multiple explosions. Might be a bug with that though.\n    const particles = this.add.particles('spark');\n    this.emitter = particles.createEmitter();\n    this.emitter.setSpeed(200);\n    this.emitter.setBlendMode(Phaser.BlendModes.ADD);\n    this.emitter.on = false;\n\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB) {\n      if(bodyA.gameObject.collision) {\n        bodyA.gameObject.collision(bodyB.gameObject);\n      }\n      if(bodyB.gameObject.collision) {\n        bodyB.gameObject.collision(bodyA.gameObject);\n      }\n    }, this);\n\n    this.keys = {\n      up: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP),\n      left: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT),\n      right: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT),\n      down: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN),\n      space: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\n    };\n\n  }\n\n  update() {\n    this.player.update();\n    this.enemyGroup.children.entries.forEach(\n      (sprite) => {sprite.update();}\n    );\n    this.cameras.main.scrollX += 2;\n  }\n\n  explosion(x, y) {\n    this.emitter.setPosition(x, y);\n    this.emitter.on = true;\n    this.time.delayedCall(1500, function(){\n      this.emitter.on = false;\n      \n    }, [], this);\n  }\n}\n\n","export default class Boot extends Phaser.Scene {\n\n  constructor () {\n    super('boot');\n    this.progressBar = null;\n    this.progressBarRectangle = null;\n  }\n\n  preload () {\n    this.load.image('sky', 'space3.png');\n    this.load.image('logo', 'phaser3-logo.png');\n    this.load.image('red', 'red.png');\n    this.load.on('progress', this.onLoadProgress, this);\n    this.load.on('complete', this.onLoadComplete, this);\n    this.createProgressBar();\n  }\n\n  create () {\n    this.scene.start('menu');\n  }\n\n  // extend:\n\n  createProgressBar () {\n    var main = this.cameras.main;\n    this.progressBarRectangle = new Phaser.Geom.Rectangle(0, 0, 0.5 * main.width, 50);\n    Phaser.Geom.Rectangle.CenterOn(this.progressBarRectangle, 0.5 * main.width, 0.5 * main.height);\n    this.progressBar = this.add.graphics();\n  }\n\n  onLoadComplete (loader) {\n    console.log('onLoadComplete', loader);\n    this.progressBar.destroy();\n  }\n\n  onLoadProgress (progress) {\n    var rect = this.progressBarRectangle;\n    var color = (this.load.failed.size > 0) ? (0xff2200) : (0xffffff);\n    this.progressBar\n      .clear()\n      .fillStyle(0x222222)\n      .fillRect(rect.x, rect.y, rect.width, rect.height)\n      .fillStyle(color)\n      .fillRect(rect.x, rect.y, progress * rect.width, rect.height);\n    console.log('progress', progress);\n  }\n\n}\n","export default class Default extends Phaser.Scene {\n\n  constructor () {\n    super('default');\n    this.score = null;\n  }\n\n  init (data) {\n    console.log('init', this.scene.key, data, this);\n    this.score = 0;\n  }\n\n  create () {\n    var sky = this.add.image(400, 300, 'sky');\n    sky.alpha = 0.5;\n    const particles = this.add.particles('red');\n    const emitter = particles.createEmitter({\n      speed: 100,\n      scale: { start: 1, end: 0 },\n      blendMode: 'ADD'\n    });\n    const logo = this.physics.add.image(400, 100, 'logo');\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n    emitter.startFollow(logo);\n    this.input.keyboard.once('keydown_Q', this.quit, this);\n  }\n\n  update () {\n    this.score += 1;\n  }\n\n  // extend:\n\n  quit () {\n    this.scene.start('menu', { score: this.score });\n  }\n\n}\n","const FONT = 'Futura,system-ui,sans-serif';\n\nexport default class Menu extends Phaser.Scene {\n\n  constructor () {\n    super('menu');\n    this.highScore = null;\n  }\n\n  init (data) {\n    console.log('init', this.scene.key, data, this);\n    this.highScore = data.score || 0;\n  }\n\n  create () {\n    const sky = this.add.image(400, 300, 'sky');\n    sky.alpha = 0.25;\n    this.add.text(400, 300, 'START', {\n      fill: 'white',\n      fontFamily: FONT,\n      fontSize: 48\n    })\n      .setOrigin(0.5)\n      .setShadow(0, 1, '#62F6FF', 10);\n    this.add.text(400, 450, 'High Score: ' + this.highScore, {\n      fill: '#FED141',\n      fontFamily: FONT,\n      fontSize: 24\n    })\n      .setOrigin(0.5)\n      .setShadow(0, 1, 'black', 5);\n    this.input.on('pointerup', this.start, this);\n  }\n\n  // extend:\n\n  start () {\n    this.scene.start('DiSScene');\n  }\n\n}\n","import Enemy from './Enemy';\nimport Bullet from './Bullet';\n\nexport default class BadRex extends Enemy {\n  constructor (config) {\n    super(config);\n    this.lastFired = 0;\n    this.setIgnoreGravity(true);\n    this.bullets = this.scene.add.group();\n    let bullet;\n    for(let i=0;i<10;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    let time = this.scene.time.now;\n\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    if (time > this.lastFired) {\n      let bullet = this.bullets.get();\n\n      if (bullet)\n      {\n        bullet.fire(this.x, this.y, -25, 0, -90, 0);\n        this.lastFired = time + 2000;\n      }\n    }\n\n    //rudimentary AI\n    if(this.scene.player.alive) {\n      if(this.scene.player.y > this.y) {\n        this.setVelocityY(1);\n      } else {\n        this.setVelocityY(-1);\n      }\n    }\n    \n\n    this.setVelocityX(-2);\n  }\n}","export default class Bullet extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);\n    config.scene.add.existing(this);\n    this.setActive(false);\n    this.setVisible(false);\n  }\n\n  fire(x, y, velocityX, velocityY, offsetX, offsetY) {\n    this.scene.matter.add.gameObject(this);\n    this.setIgnoreGravity(true);\n    this.setPosition(x + offsetX, y + offsetY);\n    this.setVelocityX(velocityX);\n    this.setVelocityY(velocityY);\n    this.setActive(true);\n    this.setVisible(true);\n  }\n\n  update() {\n    if (this.active) {\n      if (this.x > this.scene.cameras.main.scrollX + this.scene.cameras.main.width)\n      {\n        this.death();\n      }\n    }  \n  }\n\n  collision() {\n    this.death();\n  }\n\n  death() {\n    this.scene.matter.world.remove(this);\n    this.setPosition(0, 0);\n    this.setVelocityX(0);\n    this.setActive(false);\n    this.setVisible(false);\n  }\n}","/*\nGeneric enemy class that extends Phaser sprites.\nClasses for enemy types extend this class.\n*/\n\nexport default class Enemy extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);    \n    config.scene.matter.add.gameObject(this);\n    config.scene.add.existing(this);\n    this.enemy = true;\n    this.alive = true;\n    // start still and wait until needed\n    this.setVelocity(0, 0);\n    this.beenSeen = false;\n    // know about Player\n    this.player = this.scene.player; \n    // Base horizontal velocity / direction.\n    this.direction = -50; \n    this.setFixedRotation(true);\n    this.setScale(.25);\n    this.setFrictionAir(0.05);\n    this.setMass(30);\n  }\n\n  activated(){\n    // Method to check if an enemy is activated, the enemy will stay put\n    // until activated so that starting positions is correct\n    if(!this.alive){\n      if(this.y>240){\n        this.kill();\n      }\n      return false;\n    }\n    if(!this.beenSeen){\n      // check if it's being seen now and if so, activate it\n      if(this.x<this.scene.cameras.main.scrollX+this.scene.sys.game.canvas.width+80){\n        this.beenSeen = true;\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  collision(whoHitMe) {\n    this.death();\n  }\n\n  death() {\n    this.scene.matter.world.remove(this);\n    this.scene.explosion(this.x, this.y);\n    this.destroy();\n  }\n}\n","import Bullet from '../sprites/Bullet';\n\nexport default class Player extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);\n    config.scene.matter.add.gameObject(this);\n    config.scene.add.existing(this);\n    this.setIgnoreGravity(true);\n    this.setFixedRotation(true);\n    this.setScale(.25);\n    this.setFrictionAir(0.05);\n    this.setMass(30);\n    this.lastFired = 0;\n\n    this.bullets = this.scene.add.group();\n    let bullet;\n    for(let i=0;i<20;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update() {\n    if (!this.active) {return;}\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    //I feel like there must be a better way to do this.\n    if(this.angle !== 0){\n      this.setAngle(0);\n    }\n    \n    let time = this.scene.time.now;\n    let keys = this.scene.keys;\n    let input = {\n      left: keys.left.isDown,\n      right: keys.right.isDown,\n      down: keys.down.isDown,\n      up: keys.up.isDown,\n      space: keys.space.isDown\n    };\n\n    if (this.active) {\n      if (input.left) {\n        this.thrustBack(0.1);\n      } else if (input.right) {\n        this.thrust(0.1);\n      }\n      if (input.up) {\n        this.thrustLeft(0.1);\n      } else if (input.down) {\n        this.thrustRight(0.1);\n      }\n\n      if (input.space && time > this.lastFired) {\n        let bullet = this.bullets.get();\n        if (bullet)\n        {\n          bullet.fire(this.x, this.y, 25, 0, 90, 0);\n          this.lastFired = time + 500;\n        }\n      }\n    }\n  }\n\n  collision(whoHitMe) {\n    this.death();\n  }\n\n  death(whoKilledMe) {\n    this.scene.matter.world.remove(this);\n    this.scene.explosion(this.x, this.y);\n    \n    this.scene.time.delayedCall(3000, function(){\n      this.scene.start('menu');  \n    }, [], this.scene);\n    this.destroy();\n  }\n}","import Enemy from './Enemy';\nimport Bullet from './Bullet';\nexport default class Tanky extends Enemy {\n  constructor (config) {\n    super(config);\n    this.bullets = this.scene.add.group();\n    this.lastFired = 0;\n    let bullet;\n    for(let i=0;i<10;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    let time = this.scene.time.now;\n\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    if (time > this.lastFired) {\n      let bullet = this.bullets.get();\n\n      if (bullet)\n      {\n        bullet.fire(this.x, this.y, -10, -5, -60, -70);\n        bullet.setIgnoreGravity(false);\n        this.lastFired = time + 2000;\n      }\n    }\n    this.setVelocityX(-1);\n  }\n  \n  collision(whoHitMe) {\n    if(!whoHitMe.tile) {\n      this.death();\n    }\n  }\n}","import Enemy from './Enemy';\n\nexport default class Troodon extends Enemy {\n  constructor (config) {\n    super(config);\n    this.setIgnoreGravity(true);\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    this.setVelocityX(-2);\n  }\n}"]}