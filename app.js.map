{"version":3,"sources":["app/initialize.js","app/scenes/DiSScene.js","app/scenes/boot.js","app/scenes/default.js","app/scenes/menu.js","app/sprites/BadRex.js","app/sprites/Bullet.js","app/sprites/Enemy.js","app/sprites/Player.js","app/sprites/Tanky.js","app/sprites/Troodon.js"],"names":["_boot","require","_default","_menu","_DiSScene","window","game","Phaser","Game","width","height","type","AUTO","title","url","version","banner","background","loader","path","maxParallelDownloads","physics","default","matter","enableSleep","scene","_boot2","_default2","_menu2","_DiSScene2","_Player","_Troodon","_BadRex","_Tanky","DiSScene","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","load","image","tilemapTiledJSON","atlas","_this2","map","make","tilemap","key","tileset","addTilesetImage","decorations","createDynamicLayer","collisionLayer","setCollisionByProperty","collides","world","convertTilemapLayer","setBounds","widthInPixels","heightInPixels","enemyGroup","add","group","getObjectLayer","objects","forEach","enemy","enemyObject","name","_Troodon2","x","y","_BadRex2","_Tanky2","console","error","tileProperties","gid","player","_Player2","anims","create","frames","generateFrameNames","prefix","end","zeroPad","frameRate","repeat","play","cameras","main","particles","emitter","createEmitter","setSpeed","setBlendMode","BlendModes","ADD","on","event","bodyA","bodyB","gameObject","collision","keys","up","input","keyboard","addKey","Input","Keyboard","KeyCodes","UP","left","LEFT","right","RIGHT","down","DOWN","space","SPACE","update","children","entries","sprite","scrollX","setPosition","time","delayedCall","Scene","Boot","_this","progressBar","progressBarRectangle","onLoadProgress","onLoadComplete","createProgressBar","start","Geom","Rectangle","CenterOn","graphics","log","destroy","progress","rect","color","failed","size","clear","fillStyle","fillRect","Default","score","data","sky","alpha","speed","scale","blendMode","logo","setVelocity","setBounce","setCollideWorldBounds","startFollow","once","quit","FONT","Menu","highScore","text","fill","fontFamily","fontSize","setOrigin","setShadow","_Enemy2","_Bullet","BadRex","config","lastFired","setIgnoreGravity","bullets","bullet","i","_Bullet2","activated","now","get","fire","active","setVelocityY","setVelocityX","Bullet","existing","setActive","setVisible","velocityX","velocityY","offsetX","offsetY","death","remove","GameObjects","Sprite","Enemy","alive","beenSeen","direction","setFixedRotation","setScale","setFrictionAir","setMass","sys","canvas","kill","whoHitMe","explosion","Player","angle","setAngle","isDown","thrustBack","thrust","thrustLeft","thrustRight","whoKilledMe","location","reload","Tanky","tile","Troodon"],"mappings":"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","file":"public/app.js.map","sourcesContent":["import BootScene from 'scenes/boot';\nimport DefaultScene from 'scenes/default';\nimport MenuScene from 'scenes/menu';\nimport DiSScene from 'scenes/DiSScene';\n\nwindow.game = new Phaser.Game({\n\n  // See <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n\n  width: 800,\n  height: 600,\n  // zoom: 1,\n  // resolution: 1,\n  type: Phaser.AUTO,\n  // parent: null,\n  // canvas: null,\n  // canvasStyle: null,\n  // seed: null,\n  title: '☕️ Brunch with Phaser', // 'My Phaser 3 Game'\n  url: 'https://github.com/samme/brunch-phaser-es6',\n  version: '0.0.1',\n  // input: {\n  //   keyboard: true,\n  //   mouse: true,\n  //   touch: true,\n  //   gamepad: false\n  // },\n  // disableContextMenu: false,\n  // banner: false\n  banner: {\n    // hidePhaser: false,\n    // text: 'white',\n    background: ['#e54661', '#ffa644', '#998a2f', '#2c594f', '#002d40']\n  },\n  // fps: {\n  //   min: 10,\n  //   target: 60,\n  //   forceSetTimeout: false,\n  // },\n  // pixelArt: false,\n  // transparent: false,\n  // clearBeforeRender: true,\n  // backgroundColor: 0x000000, // black\n  loader: {\n    // baseURL: '',\n    path: 'assets/',\n    maxParallelDownloads: 6,\n    // crossOrigin: 'anonymous',\n    // timeout: 0\n  },\n  physics: {\n    default: 'matter',\n    matter: {\n      enableSleep: true\n    }\n  },\n  scene: [\n    BootScene,\n    DefaultScene,\n    MenuScene,\n    DiSScene\n  ],\n\n});\n","import Player from '../sprites/Player';\nimport Troodon from '../sprites/Troodon';\nimport BadRex from '../sprites/BadRex';\nimport Tanky from '../sprites/Tanky';\n\nexport default class DiSScene extends Phaser.Scene {\n  constructor() {\n    super('DiSScene');\n  }\n\n  preload() {\n    this.load.image('tiles', 'tiles_spritesheet.png');\n    this.load.tilemapTiledJSON('map', 'level.json');\n    this.load.image('spark', 'blue.png');\n    this.load.atlas('rex', 'rex.png', 'rex.json');\n    this.load.image('troodon', 'troodon.png');\n    this.load.image('tanky', 'tanky.png');\n    this.load.image('badrex', 'badrex.png');\n    this.load.image('bullet', 'bullet.png');\n  }\n\n  create() {\n    this.map = this.make.tilemap({ key: 'map'});\n    this.tileset = this.map.addTilesetImage('tiles_spritesheet', 'tiles');\n    this.decorations = this.map.createDynamicLayer(0, this.tileset, 0, 0);\n    this.collisionLayer = this.map.createDynamicLayer(1, this.tileset, 0, 0);\n    \n\n    this.collisionLayer.setCollisionByProperty({ collides: true });\n\n    this.matter.world.convertTilemapLayer(this.collisionLayer);\n    this.matter.world.setBounds(this.map.widthInPixels, this.map.heightInPixels);\n\n    this.enemyGroup = this.add.group();\n\n    this.map.getObjectLayer('enemies').objects.forEach(\n      (enemy) => {\n        let enemyObject;\n        switch (enemy.name) {\n        case 'troodon':\n          enemyObject = new Troodon({\n            scene: this,\n            key: 'troodon',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        case 'badrex':\n          enemyObject = new BadRex({\n            scene: this,\n            key: 'badrex',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        case 'tanky':\n          enemyObject = new Tanky({\n            scene: this,\n            key: 'tanky',\n            x: enemy.x,\n            y: enemy.y\n          });\n          break;\n        default:\n          console.error('Unknown:', this.tileset.tileProperties[enemy.gid - 1]);\n          break;\n        }\n        this.enemyGroup.add(enemyObject);\n      }\n    );\n\n    this.player = new Player({\n      scene: this,\n      key: 'rex',\n      x: 300,\n      y: 300\n    });\n\n    this.anims.create({\n      key: 'rexFly',\n      frames: this.anims.generateFrameNames('rex', {prefix: 'rex_', end: 2, zeroPad: 4}),\n      frameRate: 5,\n      repeat: -1\n    });\n\n    this.player.anims.play('rexFly', true);\n\n    this.cameras.main.setBounds();\n    \n    //TODO: I think I'm going to need a group of emitters for multiple explosions. Might be a bug with that though.\n    const particles = this.add.particles('spark');\n    this.emitter = particles.createEmitter();\n    this.emitter.setSpeed(200);\n    this.emitter.setBlendMode(Phaser.BlendModes.ADD);\n    this.emitter.on = false;\n\n    this.matter.world.on('collisionstart', function(event, bodyA, bodyB) {\n      if(bodyA.gameObject.collision) {\n        bodyA.gameObject.collision(bodyB.gameObject);\n      }\n      if(bodyB.gameObject.collision) {\n        bodyB.gameObject.collision(bodyA.gameObject);\n      }\n    }, this);\n\n    this.keys = {\n      up: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP),\n      left: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT),\n      right: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT),\n      down: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN),\n      space: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\n    };\n\n  }\n\n  update() {\n    this.player.update();\n    this.enemyGroup.children.entries.forEach(\n      (sprite) => {sprite.update();}\n    );\n    this.cameras.main.scrollX += 2;\n  }\n\n  explosion(x, y) {\n    this.emitter.setPosition(x, y);\n    this.emitter.on = true;\n    this.time.delayedCall(1500, function(){\n      this.emitter.on = false;\n      \n    }, [], this);\n  }\n}\n\n","export default class Boot extends Phaser.Scene {\n\n  constructor () {\n    super('boot');\n    this.progressBar = null;\n    this.progressBarRectangle = null;\n  }\n\n  preload () {\n    this.load.image('sky', 'space3.png');\n    this.load.image('logo', 'phaser3-logo.png');\n    this.load.image('red', 'red.png');\n    this.load.on('progress', this.onLoadProgress, this);\n    this.load.on('complete', this.onLoadComplete, this);\n    this.createProgressBar();\n  }\n\n  create () {\n    this.scene.start('menu');\n  }\n\n  // extend:\n\n  createProgressBar () {\n    var main = this.cameras.main;\n    this.progressBarRectangle = new Phaser.Geom.Rectangle(0, 0, 0.5 * main.width, 50);\n    Phaser.Geom.Rectangle.CenterOn(this.progressBarRectangle, 0.5 * main.width, 0.5 * main.height);\n    this.progressBar = this.add.graphics();\n  }\n\n  onLoadComplete (loader) {\n    console.log('onLoadComplete', loader);\n    this.progressBar.destroy();\n  }\n\n  onLoadProgress (progress) {\n    var rect = this.progressBarRectangle;\n    var color = (this.load.failed.size > 0) ? (0xff2200) : (0xffffff);\n    this.progressBar\n      .clear()\n      .fillStyle(0x222222)\n      .fillRect(rect.x, rect.y, rect.width, rect.height)\n      .fillStyle(color)\n      .fillRect(rect.x, rect.y, progress * rect.width, rect.height);\n    console.log('progress', progress);\n  }\n\n}\n","export default class Default extends Phaser.Scene {\n\n  constructor () {\n    super('default');\n    this.score = null;\n  }\n\n  init (data) {\n    console.log('init', this.scene.key, data, this);\n    this.score = 0;\n  }\n\n  create () {\n    var sky = this.add.image(400, 300, 'sky');\n    sky.alpha = 0.5;\n    const particles = this.add.particles('red');\n    const emitter = particles.createEmitter({\n      speed: 100,\n      scale: { start: 1, end: 0 },\n      blendMode: 'ADD'\n    });\n    const logo = this.physics.add.image(400, 100, 'logo');\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n    emitter.startFollow(logo);\n    this.input.keyboard.once('keydown_Q', this.quit, this);\n  }\n\n  update () {\n    this.score += 1;\n  }\n\n  // extend:\n\n  quit () {\n    this.scene.start('menu', { score: this.score });\n  }\n\n}\n","const FONT = 'Futura,system-ui,sans-serif';\n\nexport default class Menu extends Phaser.Scene {\n\n  constructor () {\n    super('menu');\n    this.highScore = null;\n  }\n\n  init (data) {\n    console.log('init', this.scene.key, data, this);\n    this.highScore = data.score || 0;\n  }\n\n  create () {\n    const sky = this.add.image(400, 300, 'sky');\n    sky.alpha = 0.25;\n    this.add.text(400, 300, 'START', {\n      fill: 'white',\n      fontFamily: FONT,\n      fontSize: 48\n    })\n      .setOrigin(0.5)\n      .setShadow(0, 1, '#62F6FF', 10);\n    this.add.text(400, 450, 'High Score: ' + this.highScore, {\n      fill: '#FED141',\n      fontFamily: FONT,\n      fontSize: 24\n    })\n      .setOrigin(0.5)\n      .setShadow(0, 1, 'black', 5);\n    this.input.on('pointerup', this.start, this);\n  }\n\n  // extend:\n\n  start () {\n    this.scene.start('DiSScene');\n  }\n\n}\n","import Enemy from './Enemy';\nimport Bullet from './Bullet';\n\nexport default class BadRex extends Enemy {\n  constructor (config) {\n    super(config);\n    this.lastFired = 0;\n    this.setIgnoreGravity(true);\n    this.bullets = this.scene.add.group();\n    let bullet;\n    for(let i=0;i<10;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    let time = this.scene.time.now;\n\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    if (time > this.lastFired) {\n      let bullet = this.bullets.get();\n\n      if (bullet)\n      {\n        bullet.fire(this.x, this.y, -25, 0, -90, 0);\n        this.lastFired = time + 2000;\n      }\n    }\n\n    //rudimentary AI\n    if(this.scene.player.active) {\n      if(this.scene.player.y > this.y) {\n        this.setVelocityY(1);\n      } else {\n        this.setVelocityY(-1);\n      }\n    }\n    this.setVelocityX(-2);\n  }\n}","export default class Bullet extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);\n    config.scene.add.existing(this);\n    this.setActive(false);\n    this.setVisible(false);\n  }\n\n  fire(x, y, velocityX, velocityY, offsetX, offsetY) {\n    this.scene.matter.add.gameObject(this);\n    this.setIgnoreGravity(true);\n    this.setPosition(x + offsetX, y + offsetY);\n    this.setVelocityX(velocityX);\n    this.setVelocityY(velocityY);\n    this.setActive(true);\n    this.setVisible(true);\n  }\n\n  update() {\n    if (this.active) {\n      if (this.x > this.scene.cameras.main.scrollX + this.scene.cameras.main.width)\n      {\n        this.death();\n      }\n    }  \n  }\n\n  collision() {\n    this.death();\n  }\n\n  death() {\n    this.scene.matter.world.remove(this);\n    this.setPosition(0, 0);\n    this.setVelocityX(0);\n    this.setActive(false);\n    this.setVisible(false);\n  }\n}","/*\nGeneric enemy class that extends Phaser sprites.\nClasses for enemy types extend this class.\n*/\n\nexport default class Enemy extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);    \n    config.scene.matter.add.gameObject(this);\n    config.scene.add.existing(this);\n    this.enemy = true;\n    this.alive = true;\n    // start still and wait until needed\n    this.setVelocity(0, 0);\n    this.beenSeen = false;\n    // know about Player\n    this.player = this.scene.player; \n    // Base horizontal velocity / direction.\n    this.direction = -50; \n    this.setFixedRotation(true);\n    this.setScale(.25);\n    this.setFrictionAir(0.05);\n    this.setMass(30);\n  }\n\n  activated(){\n    // Method to check if an enemy is activated, the enemy will stay put\n    // until activated so that starting positions is correct\n    if(!this.alive){\n      if(this.y>240){\n        this.kill();\n      }\n      return false;\n    }\n    if(!this.beenSeen){\n      // check if it's being seen now and if so, activate it\n      if(this.x<this.scene.cameras.main.scrollX+this.scene.sys.game.canvas.width+80){\n        this.beenSeen = true;\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  collision(whoHitMe) {\n    this.death();\n  }\n\n  death() {\n    this.scene.matter.world.remove(this);\n    this.scene.explosion(this.x, this.y);\n    this.destroy();\n  }\n}\n","import Bullet from '../sprites/Bullet';\n\nexport default class Player extends Phaser.GameObjects.Sprite {\n  constructor(config) {\n    super(config.scene, config.x, config.y, config.key);\n    config.scene.matter.add.gameObject(this);\n    config.scene.add.existing(this);\n    this.setIgnoreGravity(true);\n    this.setFixedRotation(true);\n    this.setScale(.25);\n    this.setFrictionAir(0.05);\n    this.setMass(30);\n    this.lastFired = 0;\n\n    this.bullets = this.scene.add.group();\n    let bullet;\n    for(let i=0;i<20;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update() {\n    if (!this.active) {return;}\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    //I feel like there must be a better way to do this.\n    if(this.angle !== 0){\n      this.setAngle(0);\n    }\n    \n    let time = this.scene.time.now;\n    let keys = this.scene.keys;\n    let input = {\n      left: keys.left.isDown,\n      right: keys.right.isDown,\n      down: keys.down.isDown,\n      up: keys.up.isDown,\n      space: keys.space.isDown\n    };\n\n    if (this.active) {\n      if (input.left) {\n        this.thrustBack(0.1);\n      } else if (input.right) {\n        this.thrust(0.1);\n      }\n      if (input.up) {\n        this.thrustLeft(0.1);\n      } else if (input.down) {\n        this.thrustRight(0.1);\n      }\n\n      if (input.space && time > this.lastFired) {\n        let bullet = this.bullets.get();\n        if (bullet)\n        {\n          bullet.fire(this.x, this.y, 25, 0, 90, 0);\n          this.lastFired = time + 500;\n        }\n      }\n    }\n  }\n\n  collision(whoHitMe) {\n    this.death();\n  }\n\n  death(whoKilledMe) {\n    this.scene.matter.world.remove(this);\n    this.scene.explosion(this.x, this.y);\n    \n    this.scene.time.delayedCall(3000, function(){\n      location.reload(); \n    }, [], this.scene);\n    this.destroy();\n  }\n}","import Enemy from './Enemy';\nimport Bullet from './Bullet';\nexport default class Tanky extends Enemy {\n  constructor (config) {\n    super(config);\n    this.bullets = this.scene.add.group();\n    this.lastFired = 0;\n    let bullet;\n    for(let i=0;i<10;i++) {\n      bullet = new Bullet({\n        scene: this.scene,\n        key: 'bullet',\n        x: 0,\n        y: 0\n      });\n      this.bullets.add(bullet);\n    }\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    let time = this.scene.time.now;\n\n    this.bullets.children.entries.forEach(\n      (bullet) => {bullet.update();}\n    );\n\n    if (time > this.lastFired) {\n      let bullet = this.bullets.get();\n\n      if (bullet)\n      {\n        bullet.fire(this.x, this.y, -10, -5, -60, -70);\n        bullet.setIgnoreGravity(false);\n        this.lastFired = time + 2000;\n      }\n    }\n    this.setVelocityX(-1);\n  }\n  \n  collision(whoHitMe) {\n    if(!whoHitMe.tile) {\n      this.death();\n    }\n  }\n}","import Enemy from './Enemy';\n\nexport default class Troodon extends Enemy {\n  constructor (config) {\n    super(config);\n    this.setIgnoreGravity(true);\n  }\n\n  update () {\n    if (!this.activated()){return;}\n    this.setVelocityX(-2);\n  }\n}"]}